# -*- sh -*-

# Copy env.template to env and modify


# Save shell flags
flags=$(set +o)

# Mark all the following variables for export
set -o allexport

# https://docs.djangoproject.com/en/1.11/ref/settings/#std:setting-SECRET_KEY
# SECURITY WARNING: generate unique key with `manage.py generate_secret_key`
SECRET_KEY='!j1&*$wnrkrtc-74cc7_^#n6r3om$6s#!fy=zkd_xp(gkikl+8'

# SECURITY WARNING: don't run with debug turned on in production!
# Use either true or false
DEBUG=false

# A space-separated list of domain names and IPs
DOMAINS="$(hostname -d) $(hostname -s).local localhost"
IPS="$(hostname -I) 127.0.0.1"

case "$(uname -p)" in
    x86_64)
        echo "Detected architecture x86_64"
        UBUNTU_IMAGE=ubuntu
        NGINX_IMAGE=nginx
        ;;
    armv7*)
        echo "Detected architecture armv7"
        UBUNTU_IMAGE=arm32v7/ubuntu
        NGINX_IMAGE=arm32v7/nginx
        ;;
    *)
        echo "Unrecognized architecture in `uname -p`." >&2
        exit 1
esac

# SECURITY WARNING: You should be using certs from a trusted authority.
#                   If you don't have any, try letsencrypt or a similar service.
# Provide the absolute path to your ssl certificate and key
REPO_ROOT=$(git rev-parse --show-toplevel)
SSL_CERT_PATH=${REPO_ROOT}/nginx/certs/ssl-cert-snakeoil.pem
SSL_KEY_PATH=${REPO_ROOT}/nginx/certs/ssl-cert-snakeoil.key

if $DEBUG; then
    GUNICORN_LOG_LEVEL=debug;
else
    GUNICORN_LOG_LEVEL=info;
fi

# Restore shell flags
eval "$flags"
