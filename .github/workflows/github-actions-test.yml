name: 'scos-sensor test'

on: 
  workflow_dispatch:
  push:
  pull_request:

jobs:
  run-scos-sensor-tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r src/requirements-dev.txt
      - run: black --check ./src
      - run: tox -c ./src/tox.ini -e coverage
  
  run-scos-sensor-docker:
    runs-on: ubuntu-20.04
    steps:
      - name: Install ubuntu packages
        run: sudo apt-get install -y docker-compose docker.io containerd runc

      - name: Checkout
        uses: actions/checkout@v3

      - name: Create Certs
        working-directory: ./scripts
        run: sh create_localhost_cert.sh

      - name: Create Fake USB # Create fake usb device node to make api container happy
        run : | 
          sudo mkdir -p /dev/bus/usb/001
          sudo mknod /dev/bus/usb/001/001 c 189 260

      - name: Run Docker
        run: source ./env.template && export MOCK_SIGAN=1 && export MOCK_SIGAN_RANDOM=1 && docker-compose up -d --build

      - name: Pause # wait for containers to finish starting
        run: sleep 15

      - name: Check Logs
        run: docker-compose logs

      - name: Check Container
        run: docker ps | grep api | grep -q healthy

      - name: Stop containers
        if: always()
        run: docker-compose down
