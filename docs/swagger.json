{"swagger": "2.0", "info": {"title": "SCOS Sensor API", "description": "A RESTful API for controlling a SCOS-compatible sensor.", "version": "v1"}, "host": "localhost", "schemes": ["https"], "paths": {"/api/v1/": {"get": {"tags": ["api"], "summary": "/api/v1/", "responses": {"200": {"description": "Success"}}, "parameters": [], "operationId": "read"}}, "/api/v1/acquisitions/": {"get": {"tags": ["api"], "summary": "/api/v1/acquisitions/", "responses": {"200": {"description": "Success", "schema": {"required": ["results"], "type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"url": {"type": "string", "description": ""}, "acquisitions_available": {"type": "string", "description": ""}, "schedule_entry": {"type": "string", "description": ""}}}, "required": true, "type": "array", "name": "results", "description": ""}}}}}, "parameters": [], "operationId": "acquisitions_list"}}, "/api/v1/acquisitions/{schedule_entry_name}/": {"get": {"tags": ["api"], "summary": "/api/v1/acquisitions/{schedule_entry_name}/", "responses": {"200": {"description": "Success", "schema": {"required": ["results"], "type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"url": {"type": "string", "description": ""}, "sigmf_metadata": {"type": "string", "description": ""}, "archive": {"type": "string", "description": ""}, "task_id": {"type": "integer", "description": ""}, "created": {"type": "string", "description": ""}}}, "required": true, "type": "array", "name": "results", "description": ""}}}}}, "parameters": [{"required": true, "type": "string", "name": "schedule_entry_name", "in": "path", "description": ""}], "operationId": "acquisitions_list_0"}, "delete": {"tags": ["api"], "summary": "/api/v1/acquisitions/{schedule_entry_name}/", "responses": {"200": {"description": "Success"}}, "parameters": [{"required": true, "type": "string", "name": "schedule_entry_name", "in": "path", "description": ""}], "operationId": "acquisitions_delete"}}, "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/": {"get": {"tags": ["api"], "summary": "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/", "responses": {"200": {"description": "Success", "schema": {"required": ["task_id", "sigmf_metadata"], "type": "object", "properties": {"url": {"type": "string", "description": ""}, "sigmf_metadata": {"type": "object", "description": ""}, "archive": {"type": "string", "description": ""}, "task_id": {"type": "integer", "description": ""}, "created": {"type": "string", "description": ""}}}}}, "parameters": [{"required": true, "type": "string", "name": "schedule_entry_name", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "task_id", "in": "path", "description": ""}], "operationId": "acquisitions_read"}, "delete": {"tags": ["api"], "summary": "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/", "responses": {"200": {"description": "Success"}}, "parameters": [{"required": true, "type": "string", "name": "schedule_entry_name", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "task_id", "in": "path", "description": ""}], "operationId": "acquisitions_delete_0"}}, "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/archive": {"get": {"tags": ["api"], "summary": "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/archive", "responses": {"200": {"description": "Success"}}, "parameters": [{"required": true, "type": "string", "name": "schedule_entry_name", "in": "path", "description": ""}, {"required": true, "type": "string", "name": "task_id", "in": "path", "description": ""}], "operationId": "acquisitions_archive"}}, "/api/v1/capabilities/": {"get": {"tags": ["api"], "summary": "/api/v1/capabilities/", "responses": {"200": {"description": "Success"}}, "parameters": [], "operationId": "capabilities_list"}}, "/api/v1/schedule/": {"get": {"tags": ["api"], "summary": "/api/v1/schedule/", "responses": {"200": {"description": "Success", "schema": {"required": ["results"], "type": "object", "properties": {"results": {"items": {"type": "object", "properties": {"acquisitions": {"type": "string", "description": ""}, "name": {"type": "string", "description": "unique identifier used in URLs and filenames"}, "created": {"type": "string", "description": ""}, "url": {"type": "string", "description": ""}, "is_active": {"type": "boolean", "description": "deactivate an entry to remove it from the scheduler without removing it from the system"}, "interval": {"type": "integer", "description": "seconds between events, or leave blank to run once"}, "stop": {"type": "integer", "description": "absolute time (epoch) to stop, or leave blank for 'never'"}, "modified": {"type": "string", "description": ""}, "owner": {"type": "string", "description": ""}, "priority": {"type": "integer", "description": "lower number is higher priority (default=10)"}, "start": {"type": "integer", "description": "absolute time (epoch) to start, or leave blank for 'now'"}, "next_task_time": {"type": "integer", "description": ""}, "action": {"type": "string", "description": ""}, "relative_stop": {"type": "boolean", "description": ""}, "next_task_id": {"type": "integer", "description": ""}, "is_private": {"type": "boolean", "description": "entry and resulting data are only visible to admin"}}}, "required": true, "type": "array", "name": "results", "description": ""}}}}}, "parameters": [], "operationId": "schedule_list"}, "post": {"tags": ["api"], "summary": "/api/v1/schedule/", "responses": {"200": {"description": "Success"}}, "parameters": [], "operationId": "schedule_create"}}, "/api/v1/schedule/{name}/": {"get": {"tags": ["api"], "summary": "/api/v1/schedule/{name}/", "responses": {"200": {"description": "Success", "schema": {"required": ["action"], "type": "object", "properties": {"acquisitions": {"type": "string", "description": ""}, "name": {"type": "string", "description": "unique identifier used in URLs and filenames"}, "created": {"type": "string", "description": ""}, "url": {"type": "string", "description": ""}, "is_active": {"type": "boolean", "description": "deactivate an entry to remove it from the scheduler without removing it from the system"}, "interval": {"type": "integer", "description": "seconds between events, or leave blank to run once"}, "stop": {"type": "integer", "description": "absolute time (epoch) to stop, or leave blank for 'never'"}, "modified": {"type": "string", "description": ""}, "owner": {"type": "string", "description": ""}, "priority": {"type": "integer", "description": "lower number is higher priority (default=10)"}, "start": {"type": "integer", "description": "absolute time (epoch) to start, or leave blank for 'now'"}, "next_task_time": {"type": "integer", "description": ""}, "action": {"type": "string", "description": ""}, "relative_stop": {"type": "boolean", "description": ""}, "next_task_id": {"type": "integer", "description": ""}, "is_private": {"type": "boolean", "description": "entry and resulting data are only visible to admin"}}}}}, "parameters": [{"required": true, "type": "string", "name": "name", "in": "path", "description": "unique identifier used in URLs and filenames"}], "operationId": "schedule_read"}, "put": {"tags": ["api"], "summary": "/api/v1/schedule/{name}/", "responses": {"200": {"description": "Success"}}, "parameters": [{"required": true, "type": "string", "name": "name", "in": "path", "description": "unique identifier used in URLs and filenames"}], "operationId": "schedule_update"}, "patch": {"tags": ["api"], "summary": "/api/v1/schedule/{name}/", "responses": {"200": {"description": "Success"}}, "parameters": [{"required": true, "type": "string", "name": "name", "in": "path", "description": "unique identifier used in URLs and filenames"}], "operationId": "schedule_partial_update"}, "delete": {"tags": ["api"], "summary": "/api/v1/schedule/{name}/", "responses": {"200": {"description": "Success"}}, "parameters": [{"required": true, "type": "string", "name": "name", "in": "path", "description": "unique identifier used in URLs and filenames"}], "operationId": "schedule_delete"}}, "/api/v1/schema/": {"get": {"tags": ["api"], "summary": "/api/v1/schema/", "responses": {"200": {"description": "Success"}}, "parameters": [], "operationId": "schema_list"}}, "/api/v1/status": {"get": {"tags": ["api"], "summary": "/api/v1/status", "responses": {"200": {"description": "Success"}}, "parameters": [], "operationId": "status_list"}}}, "securityDefinitions": {"token": {"in": "header", "type": "apiKey", "description": "Tokens are automatically generated for all users. You can view yours by going to your User Details view in the browsable API at `/api/v1/users/me` and looking for the `auth_token` key. Non-admin user accounts do not initially have a password and so can not log in to the browsable API. To set a password for a user (for testing purposes), an admin can use `manage.py changepassword <username>`, but only the account's token should be stored and used for general purpose API access.", "name": "Token"}}}