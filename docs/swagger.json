{
    "api": {
        "status": {
            "list": {
                "action": "get", 
                "description": "The status overview of the sensor.", 
                "url": "/api/v1/status", 
                "_type": "link"
            }
        }, 
        "read": {
            "action": "get", 
            "description": "The API for the sensor", 
            "url": "/api/v1/", 
            "_type": "link"
        }, 
        "capabilities": {
            "list": {
                "action": "get", 
                "description": "The capabilites of the sensor.", 
                "url": "/api/v1/capabilities/", 
                "_type": "link"
            }
        }, 
        "schedule": {
            "read": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "name", 
                        "schema": {
                            "description": "The unique identifier used in URLs and filenames", 
                            "title": "name", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "get", 
                "description": "Returns the specified schedule entry.", 
                "url": "/api/v1/schedule/{name}/", 
                "_type": "link"
            }, 
            "create": {
                "action": "post", 
                "description": "Create a new schedule.", 
                "url": "/api/v1/schedule/", 
                "_type": "link"
            }, 
            "list": {
                "action": "get", 
                "description": "GET /api/v1/schedule/", 
                "url": "/api/v1/schedule/", 
                "_type": "link"
            }, 
            "partial_update": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "name", 
                        "schema": {
                            "description": "The unique identifier used in URLs and filenames", 
                            "title": "name", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "patch", 
                "description": "Partially updates the specified schedule entry.", 
                "url": "/api/v1/schedule/{name}/", 
                "_type": "link"
            }, 
            "update": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "name", 
                        "schema": {
                            "description": "The unique identifier used in URLs and filenames", 
                            "title": "name", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "put", 
                "description": "Updates the specified schedule entry.", 
                "url": "/api/v1/schedule/{name}/", 
                "_type": "link"
            }, 
            "delete": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "name", 
                        "schema": {
                            "description": "The unique identifier used in URLs and filenames", 
                            "title": "name", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "delete", 
                "description": "Deletes the specified schedule entry.", 
                "url": "/api/v1/schedule/{name}/", 
                "_type": "link"
            }
        }, 
        "acquisitions": {
            "archive": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "schedule_entry_name", 
                        "schema": {
                            "description": "", 
                            "title": "", 
                            "_type": "string"
                        }
                    }, 
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "task_id", 
                        "schema": {
                            "description": "The id of the task relative to the acquisition", 
                            "title": "task id", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "get", 
                "description": "Downloads the acquisition's SigMF archive.", 
                "url": "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/archive", 
                "_type": "link"
            }, 
            "delete_0": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "schedule_entry_name", 
                        "schema": {
                            "description": "", 
                            "title": "", 
                            "_type": "string"
                        }
                    }, 
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "task_id", 
                        "schema": {
                            "description": "The id of the task relative to the acquisition", 
                            "title": "task id", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "delete", 
                "description": "Deletes the specified acquisition.", 
                "url": "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/", 
                "_type": "link"
            }, 
            "list_0": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "schedule_entry_name", 
                        "schema": {
                            "description": "", 
                            "title": "", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "get", 
                "description": "Returns a list of all acquisitions created by the given schedule entry.", 
                "url": "/api/v1/acquisitions/{schedule_entry_name}/", 
                "_type": "link"
            }, 
            "read": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "schedule_entry_name", 
                        "schema": {
                            "description": "", 
                            "title": "", 
                            "_type": "string"
                        }
                    }, 
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "task_id", 
                        "schema": {
                            "description": "The id of the task relative to the acquisition", 
                            "title": "task id", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "get", 
                "description": "Returns all available metadata about an acquisition.", 
                "url": "/api/v1/acquisitions/{schedule_entry_name}/{task_id}/", 
                "_type": "link"
            }, 
            "list": {
                "action": "get", 
                "description": "Returns an overview of how many acquisitions are available per schedule\nentry.", 
                "url": "/api/v1/acquisitions/", 
                "_type": "link"
            }, 
            "delete": {
                "fields": [
                    {
                        "location": "path", 
                        "required": true, 
                        "name": "schedule_entry_name", 
                        "schema": {
                            "description": "", 
                            "title": "", 
                            "_type": "string"
                        }
                    }
                ], 
                "action": "delete", 
                "description": "Deletes all acquisitions created by the given schedule entry.", 
                "url": "/api/v1/acquisitions/{schedule_entry_name}/", 
                "_type": "link"
            }
        }, 
        "schema": {
            "list": {
                "action": "get", 
                "description": "The schema overview for the API.", 
                "url": "/api/v1/schema/", 
                "_type": "link"
            }, 
            "list_0": {
                "action": "get", 
                "url": "/api/v1/schema/", 
                "_type": "link"
            }
        }, 
        "users": {
            "create": {
                "action": "post", 
                "fields": [
                    {
                        "location": "form", 
                        "required": true, 
                        "name": "username", 
                        "schema": {
                            "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", 
                            "title": "Username", 
                            "_type": "string"
                        }
                    }, 
                    {
                        "location": "form", 
                        "name": "is_active", 
                        "schema": {
                            "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", 
                            "title": "Active", 
                            "_type": "boolean"
                        }
                    }, 
                    {
                        "location": "form", 
                        "name": "email", 
                        "schema": {
                            "description": "", 
                            "title": "Email", 
                            "_type": "string"
                        }
                    }, 
                    {
                        "location": "form", 
                        "name": "server_url", 
                        "schema": {
                            "description": "URL of server if account belongs to a sensor manager", 
                            "title": "Server URL", 
                            "_type": "string"
                        }
                    }
                ], 
                "_type": "link", 
                "url": "/api/v1/users/", 
                "description": "Information on users.\n\nPost is only available to admin users. The fields\n`email`, `server_url`, `auth_token`, `has_usable_password`, and `is_admin`\nare only visible to admin users. For more information on user fields, see\nDjango's documentation on custom user models.", 
                "encoding": "application/json"
            }, 
            "list": {
                "action": "get", 
                "description": "Information on users.\n\nPost is only available to admin users. The fields\n`email`, `server_url`, `auth_token`, `has_usable_password`, and `is_admin`\nare only visible to admin users. For more information on user fields, see\nDjango's documentation on custom user models.", 
                "url": "/api/v1/users/", 
                "_type": "link"
            }
        }
    }, 
    "_type": "document", 
    "_meta": {
        "description": "A RESTful API for controlling a SCOS-compatible sensor.", 
        "url": "http://testserver/api/v1/schema/", 
        "title": "SCOS Sensor API"
    }
}