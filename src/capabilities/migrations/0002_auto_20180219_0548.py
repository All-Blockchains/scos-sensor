# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-02-19 05:48
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('capabilities', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='antenna',
            name='cable_loss',
            field=models.FloatField(blank=True, help_text=b'Loss for cable connecting antenna and preselector. [dB]', null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='cross_polar_discrimintation',
            field=models.FloatField(blank=True, help_text=b'Cross-polarization discrimination.', null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='gain',
            field=models.FloatField(blank=True, help_text=b'Antenna gain in direction of maximum radiation or reception. [dBi]', null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='high_frequency',
            field=models.FloatField(blank=True, help_text=b'High frequency of operational range. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='horizontal_beam_width',
            field=models.FloatField(blank=True, help_text=b'Horizontal 3-dB beamwidth. [degrees]', null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='low_frequency',
            field=models.FloatField(blank=True, help_text=b'Low frequency of operational range. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='type',
            field=models.CharField(blank=True, help_text=b"Antenna type. E.g. 'dipole'.", max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='vertical_beam_width',
            field=models.FloatField(blank=True, help_text=b'Vertical 3-dB beamwidth. [degrees]', null=True),
        ),
        migrations.AlterField(
            model_name='antenna',
            name='voltage_standing_wave_ratio',
            field=models.FloatField(blank=True, help_text=b'Voltage standing wave ratio. [volts]', null=True),
        ),
        migrations.AlterField(
            model_name='dataextractionunit',
            name='high_frequency',
            field=models.FloatField(blank=True, help_text=b'High frequency of operational range. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='dataextractionunit',
            name='low_frequency',
            field=models.FloatField(blank=True, help_text=b'Low frequency of operational range. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='dataextractionunit',
            name='max_power',
            field=models.FloatField(blank=True, help_text=b'Maximum input power. [dB]', null=True),
        ),
        migrations.AlterField(
            model_name='dataextractionunit',
            name='noise_figure',
            field=models.FloatField(blank=True, help_text=b'Noise Figure. [dB]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='cal_source_enr',
            field=models.FloatField(blank=True, help_text=b'Excess noise ratio of calibrated noise source at frequency of RF path. [dB]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='cal_source_type',
            field=models.CharField(blank=True, help_text=b"E.g., 'calibrated noise source'.", max_length=255, null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='high_frequency_passband',
            field=models.FloatField(blank=True, help_text=b'High frequency of filter 1-dB passband. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='high_frequency_stopband',
            field=models.FloatField(blank=True, help_text=b'High frequency of filter 1-dB stopband. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='lna_gain',
            field=models.FloatField(blank=True, help_text=b'Gain of low noise amplifier. [dB]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='lna_noise_figure',
            field=models.FloatField(blank=True, help_text=b'Noise figure of low noise amplifier. [dB]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='low_frequency_passband',
            field=models.FloatField(blank=True, help_text=b'Low frequency of filter 1-dB passband. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='low_frequency_stopband',
            field=models.FloatField(blank=True, help_text=b'Low frequency of filter 1-dB stopband. [Hz]', null=True),
        ),
        migrations.AlterField(
            model_name='rfpath',
            name='rf_path_number',
            field=models.PositiveSmallIntegerField(blank=True, help_text=b'RF path number.', null=True),
        ),
    ]
